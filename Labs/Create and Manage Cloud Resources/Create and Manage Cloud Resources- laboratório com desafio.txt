gcloud config set compute/zone us-east1-b
gcloud config set compute/region us-east1


# Dê o nome [Instance name] à instância.
# Use um tipo de máquina f1-micro.
# Use o tipo de imagem padrão (Debian Linux).

gcloud compute instances create [nucleus-jumphost-] \
    --tags=network-lb-tag \
    --machine-type=f1-micro \
    --image-family=debian-11 \
    --image-project=debian-cloud



# criar um cluster na zona us-east1-b para hospedar o serviço;
# usar o contêiner "hello-app" do Docker (gcr.io/google-samples/hello-app:2.0)como um marcador de posição que será substituído pelo trabalho da equipe mais tarde;
# expor o app na porta App port number

nucleus-cluster

vim deployment.yaml
vim service.yaml

kubectl create -f deployment.yaml
kubectl create -f service.yaml


================================================================
Configure um balanceador de carga HTTP

# para rodar nas instancias
cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF
chmod +x startup.sh
sudo ./startup.sh

# Crie um modelo de instância.
gcloud compute instance-templates create nucleus-backend-template \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=f1-micro \
   --image-family=debian-11 \
   --image-project=debian-cloud


# Crie o grupo gerenciado de instâncias com base no modelo:
gcloud compute instance-groups managed create nucleus-backend-group \
   --template=nucleus-backend-template --size=2

# Crie a regra de firewall fw-allow-health-check.
gcloud compute firewall-rules create [grant-tcp-rule-609] \
  --network=default \
  --action=allow \
  --direction=ingress \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 \
  --target-tags=allow-health-check \
  --rules=tcp:80


# Agora que as instâncias estão funcionando, configure um endereço IP externo, estático e global que seus clientes podem usar para acessar o balanceador de carga:
gcloud compute addresses create nucleus-ipv4-1 \
  --ip-version=IPV4 \
  --global

# Anote o endereço IPv4 que foi reservado:
gcloud compute addresses describe nucleus-ipv4-1 \
  --format="get(address)" \
  --global

# Crie uma verificação de integridade para o balanceador de carga:
gcloud compute health-checks create http http-basic-check \
  --port 80

# Crie um serviço de back-end:
gcloud compute backend-services create nucleus-web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global

# Adicione seu grupo de instâncias como back-end do serviço de back-end:
gcloud compute backend-services add-backend nucleus-web-backend-service \
  --instance-group=nucleus-backend-group \
  --instance-group-zone=us-east1-b \
  --global

# Crie um [mapa de URLs para ]encaminhar as solicitações de entrada ao serviço de back-end padrão:
gcloud compute url-maps create nucleus-web-map-http \
    --default-service nucleus-web-backend-service

# Crie um proxy HTTP de destino para encaminhar as solicitações ao mapa de URLs:
gcloud compute target-http-proxies create nucleus-http-lb-proxy \
    --url-map nucleus-web-map-http

# Crie uma regra de encaminhamento global para encaminhar as solicitações recebidas para o proxy:
gcloud compute forwarding-rules create nucleus-http-content-rule \
    --address=nucleus-ipv4-1\
    --global \
    --target-http-proxy=nucleus-http-lb-proxy \
    --ports=80

# Crie um pool de destino.
gcloud compute http-health-checks create basic-check
gcloud compute target-pools create nucleus-pool --http-health-check basic-check
gcloud compute target-pools add-instances nucleus-pool \
    --instances nucleus-backend-group